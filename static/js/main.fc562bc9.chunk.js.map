{"version":3,"sources":["components/AddOption.js","components/BGMOnOff.js","components/CheckNumberOfPlayersAndRoles.js","components/ConfirmIdentity.js","components/ConfirmChoice.js","components/ConfirmChoiceAtExile.js","components/WhoWon.js","components/GameResult.js","components/Header.js","components/ListToBeExiled.js","components/Option.js","components/Options.js","components/OutcomeOfSeer.js","components/RandomRoles.js","components/ResultOfMorning.js","components/ResultOfNight.js","components/RoleDescription.js","components/Counter.js","components/RoleOptions.js","components/ShowListOfPlayers.js","components/DisplayWerewolves.js","components/PsychicPerceive.js","components/PizzaDelivery.js","components/SamuraiAction.js","components/ShowRole.js","components/Timer.js","components/Roles.js","App.js","serviceWorker.js","index.js"],"names":["AddOption","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddOption","bind","assertThisInitialized","state","error","undefined","e","preventDefault","option","target","elements","value","trim","setState","react_default","a","createElement","className","onSubmit","type","name","React","Component","BGMOnOff","handleToggle","handleChange","onClick","handleBGM","toggle","checked","prevState","react_switch_default","onChange","CheckNumberOfPlayersAndRoles","valid","players","length","count","_i","_Object$values","values","n_each_role","diff","numberOfPlayers","numberOfRoles","disabled","determineRoles","ConfirmIdentity","handleFirstClick","handleSecondClick","player","players_with_roles","current_player_id","second_button","third_button","alive","nightPhase","ConfirmChoice","info","to_be_confirmed","hide_options","nightActionRecord","ConfirmChoiceAtExile","filter","random_player","Math","floor","random","confirm_message","victim","exile","morningPhase","WhoWon","map","winning_side","key","role_jp","GameResult","y","handleWinningSide","who_won","components_WhoWon","bgm","lib_default","url","autoLoad","volume","playStatus","Sound","status","PLAYING","restart","Header","loop","title","subtitle","defaultProps","ListToBeExiled","role","choiceConfirmAtExilePhase","Option","optionText","handleDeleteOption","Options","handleDeleteOptions","index","components_Option","OutcomeOfSeer","current_player","next_player","nextPlayer","keys","night_action","turn","outcome_of_seer","saw","err","RandomRoles","handleLevelChange","recordSelectedButton","toggleRandomSwitchRoles","level","checked_0","checked_1","checked_2","Number","handle_random_level","classes","RoleClass","instances","classInstances","roleClasses","react_radio_buttons_lib","horizontal","random_level","ResultOfMorning","afterWillPhase","continueGamePhase","phase","handlePizzaOrder","to_be_exiled","gameResultPhase","nightConfirmPhase","ResultOfNight","x","handleKilledAtNight","removeProtection","z","handleSamuraiKilledAtNight","toConsumableArray","Set","suspected_players","mostSuspiciousPlayer","baker_alive","isBakerAlive","i","j","_ref","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","includes","push","_ref2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","RoleDescription","description","Counter","handleAddOne","handleLocalMemory","handleMinusOne","handleReset","stringCount","localStorage","getItem","parseInt","isNaN","prevProps","setItem","updateNumberOfRoles","_this2","RoleOptions","role_class","Counter_Counter","ShowListOfPlayers","old_arr","arr","shuffle","killable","choiceConfirmPhase","DisplayWerewolves","werewolf_group","night_action_to_be_killed","PsychicPerceive","PizzaDelivery","pizza_delivery","order","SamuraiAction","choice_statement","can_skip_action","ShowRole","turn_1_sentence","button_next_player","alive_case","role_jp_disguise","action_sentence","components_PsychicPerceive","components_PizzaDelivery","pizza_order","components_SamuraiAction","components_DisplayWerewolves","ShowListOfPlayers_ShowListOfPlayers","RoleDescription_RoleDescription","react_scroll_up_button","ShowAtPosition","dead_case","Timer","remaining","setTimerSeconds","interval","setInterval","countDown","clearInterval","Player","protected","Villager","side","perceived","Werewolf","Seer","_this3","Knight","_this4","Traitor","_this5","WerewolfBeliever","_this6","Baker","_this7","Psychic","_this8","Haunted","_this9","WerewolfGod","_this10","Sage","_this11","Ninjya","_this12","WeakWerewolf","_this13","LoneWerewolf","_this14","Pizzeria","_this15","ImpatientPizzeria","_this16","WerewolfLinguist","_this17","Wolfman","_this18","Tolkative","_this19","Samurai","_this20","you_can_kill","BadSamurai","_this21","YoungSeer","_this22","WerewolfGame","handlePick","nextTurn","exile2","resetSuspectedPlayers","resetToBeKilledPlayer","resetToBeSamuraiKilledPlayer","prop","ROLES","villager","werewolf","seer","knight","traitor","werewolf_believer","baker","psychic","haunted","werewolf_god","sage","ninjya","weak_werewolf","lone_werewolf","pizzeria","impatient_pizzeria","werewolf_linguist","wolfman","tolkative","samurai","bad_samurai","young_seer","role_determined","night_action_to_be_samurai_killed","random_switch_roles","json","JSON","parse","stringify","console","log","optionToRemove","randomNum","alert","indexOf","concat","num","numberOfSelectedRoles","roles","random_role","randomlySwitchRoles","_loop","arguments","role_list","new_role","NewRole","target_player","n_players","currentPlayerId","current_role","killed_player","samurai_killed_players","dead","dead_list","memo","max","_i3","result","_i4","_Object$keys","morningActionCompletedPhase","forEach","n_alive_players","numberOfAliveVillagers","numberOfAliveWerewolves","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","reduce","b","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","register","components_Header","components_Options","AddOption_AddOption","RoleOptions_RoleOptions","CheckNumberOfPlayersAndRoles_CheckNumberOfPlayersAndRoles","BGMOnOff_BGMOnOff","RandomRoles_RandomRoles","night_confirm","ConfirmIdentity_ConfirmIdentity","choice_confirm","components_ConfirmChoice","components_OutcomeOfSeer","choice_confirm_at_exile","components_ConfirmChoiceAtExile","night","components_ShowRole","night_result","components_ResultOfNight","morning_exile","Timer_Timer","components_ListToBeExiled","morning_result","ResultOfMorning_ResultOfMorning","game_result","components_GameResult","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc562bc9.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class AddOption extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.state = {\n      error: undefined\n    };\n  }\n  handleAddOption(e) {\n    e.preventDefault();\n\n    const option = e.target.elements.option.value.trim();\n    const error = this.props.handleAddOption(option);\n\n    this.setState(() => ({ error }));\n\n    if (!error) {\n      e.target.elements.option.value = '';\n    }\n  }\n  render() {\n    return (\n      <div>\n        {this.state.error && <p className='add-option-error'>{this.state.error}</p>}\n        <form className='add-option' onSubmit={this.handleAddOption}>\n          <input className='add-option__input' type=\"text\" name=\"option\" />\n          <button className='button'>追加する</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Switch from \"react-switch\";\n\nexport default class BGMOnOff extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.handleBGM = this.handleBGM.bind(this);\n    this.state = {\n      toggle: true,\n      checked: true\n    };\n  }\n\n  onClick(checked) {\n    this.handleToggle();\n    this.handleBGM();\n    this.handleChange(checked);\n  }\n\n  handleToggle () {\n    this.setState((prevState) => ({\n      toggle: !prevState.toggle\n    }))\n  }\n\n  handleBGM() {\n    this.props.handleBGM();\n  }\n\n  handleChange(checked) {\n      this.setState({ checked });\n    }\n\n\n  render () {\n    return (\n      <div>\n        <div className='switch-wrapper'>\n          <label>\n                  <span className='switch-sentence'>BGMを有効化</span>\n                  <Switch onChange={this.onClick} checked={this.state.checked} />\n          </label>\n        </div>\n      </div>)\n  }\n}\n","import React from 'react';\n\nexport default class CheckNumberOfPlayersAndRoles extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            valid: false\n        }\n\n    }\n\n\n    numberOfPlayers () {\n        return this.props.players.length\n    }\n    numberOfRoles () {\n        let count = 0;\n        for (let x of Object.values(this.props.n_each_role)) {\n            count += x\n        }\n        return count\n    }\n\n\n\n    render () {\n        let diff = this.numberOfPlayers() - this.numberOfRoles()\n\n        return (\n            <div>\n                <div className='widget'>\n                    { diff > 0 && <div className='widget__message'>\n                        プレイヤーは全部で{this.numberOfPlayers()}人。 役職を後{this.numberOfPlayers() - this.numberOfRoles()}つ選んでください。\n                    </div>}\n                    { diff < 0 && <div className='widget__message'>\n                        プレイヤーは全部で{this.numberOfPlayers()}人。 役職を後{this.numberOfRoles() - this.numberOfPlayers()}つ減らしてください。\n                    </div>}\n                    { this.numberOfPlayers() === 0 && <div className='widget__message'>\n                        プレイヤーを登録してください。\n\n                    </div>}\n                    { (diff === 0 && this.numberOfPlayers() > 0) && <div className='widget__message'>\n                        プレイヤーは全部で{this.numberOfPlayers()}人。 ゲームを開始できます。\n                    </div>}\n                </div>\n\n                 <button\n                    disabled={this.numberOfPlayers() - this.numberOfRoles() !== 0}\n                    className='big-button' onClick={this.props.determineRoles}>\n                  開始する!\n                </button>\n            </div>\n            )\n    }\n}\n","import React from 'react';\n\nexport default class ConfirmIdentity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFirstClick = this.handleFirstClick.bind(this);\n    this.handleSecondClick = this.handleSecondClick.bind(this);\n    this.state = {\n      player: this.props.players_with_roles[props.current_player_id],\n      name: this.props.players_with_roles[props.current_player_id].name,\n      second_button: true,\n      third_button: true\n    };\n  }\n\n  handleFirstClick () {\n    this.setState({ second_button: false })\n  }\n\n  handleSecondClick() {\n    this.setState({ third_button: false })\n  }\n\n  render() {\n    if (this.state.player.alive){\n      return(\n        <div>\n          <div className='widget widget__confirm'>\n            <p className='widget widget__message'>プレイヤーを確認します｡</p>\n            <p className='widget widget__confirm-message'>{this.state.name}さんの番です｡ 本当に｢{this.state.name}｣さんですか?</p>\n          </div>\n          <div className='button-wrapper'>\n            <button\n              className='button-list-confirm'\n              onClick={this.handleFirstClick}\n            >\n            はい, 私は{this.state.name}です｡\n            </button>\n            <button\n              className='button-list-confirm'\n              disabled={this.state.second_button}\n              onClick={this.handleSecondClick}\n            >\n            はい, 私は{this.state.name}です｡\n            </button>\n            <button\n              className='button-list-confirm'\n              disabled={this.state.third_button}\n              onClick={this.props.nightPhase}\n            >\n            はい, 私は{this.state.name}です｡\n            </button>\n          </div>\n\n        </div>\n\n        )\n    } else {\n      return (\n        <div>\n          {this.props.nightPhase()}\n        </div>\n        )\n    }\n  }\n\n}\n\n\n\n// import React from 'react';\n\n// const ConfirmIdentity = (props) => {\n//   let player = props.players_with_roles[props.current_player_id];\n//   let name = player.name;\n//   if (player.alive){\n//     return(\n//       <div>\n//         <div className='widget widget__confirm'>\n//           <p className='widget widget__message'>プレイヤーを確認します｡</p>\n//           <p className='widget widget__confirm-message'>{name}さんの番です｡ 本当に｢{name}｣さんですか?</p>\n//         </div>\n//         <div className='button-wrapper'>\n//           <button\n//             className='button-single'\n//             onClick={props.nightPhase}\n//           >\n//           はい, 私は{name}です｡\n//           </button>\n//         </div>\n\n//       </div>\n\n//       )\n//   } else {\n//     return (\n//       <div>\n//         {props.nightPhase()}\n//       </div>\n//       )\n//   }\n// }\n\n// export default ConfirmIdentity;\n","import React from 'react';\n\nconst ConfirmChoice = (props) => {\n    let info = props.to_be_confirmed[0]\n\n    if (!props.hide_options) {\n        return (\n            <div className='widget widget__confirm'>\n                <div>\n                    <p className='widget widget__confirm-message'>{info[2].name}さんでいいですか?</p>\n                    <div className='button-wrapper'>\n                        <button\n                            className='button-list'\n                            onClick={(e) => props.nightActionRecord(info[0], info[1], info[2], info[3])}\n                        >\n                        OKです｡\n                        </button>\n                        <button\n                            className='button-list'\n                            onClick={props.nightPhase}\n                        >\n                        考え直す｡\n                        </button>\n                    </div>\n\n\n                </div>\n            </div>)\n    } else {\n        return (\n            <div>\n\n            </div>)\n    }\n\n\n}\n\nexport default ConfirmChoice;\n","import React from 'react';\n\nconst ConfirmChoiceAtExile = (props) => {\n\n    let players = props.players_with_roles.filter((player) => (player.alive));\n    let random_player = players[Math.floor(Math.random()*players.length)];\n\n    let confirm_message = (\n        <div>\n            {props.to_be_confirmed === 'random'?\n                <div>ランダムに選んでいいですか?</div>:\n                <div>{props.to_be_confirmed === undefined ? <div>追放をスキップしますか?</div> :<div>{props.to_be_confirmed.name}さんでいいですか?</div>}\n                </div>\n            }\n        </div>\n        )\n\n    let victim = 'victim';\n    if (props.to_be_confirmed === 'random') {\n        victim = random_player;\n    } else {\n        victim = props.to_be_confirmed;\n    }\n\n    if (!props.hide_options) {\n        return (\n            <div className='widget widget__confirm'>\n                <div className='widget widget__confirm-message'>{confirm_message}</div>\n                <div className='button-wrapper'>\n                    <button\n                        className='button-list'\n                        onClick={(e) => props.exile(victim)}\n                    >\n                    OKです｡\n                    </button>\n                    <button\n                        className='button-list'\n                        onClick={props.morningPhase}\n                    >\n                    考え直す｡\n                    </button>\n                </div>\n            </div>)\n    } else {\n        return (\n            <div>\n\n            </div>)\n    }\n\n\n}\n\nexport default ConfirmChoiceAtExile;\n","import React from 'react';\n\nconst WhoWon = (props) => {\n    return (\n        <div className='widget'>\n            {props.players_with_roles.map((player) => {\n                if (player.winning_side === props.winning_side) {\n                    return (\n                        <p className='widget__win-message' key={player.name}>勝ち! {player.name} ({player.role_jp})</p>\n                        )\n                    } else {\n                        return (\n                            <p className='widget__message' key={player.name +'lose'}>負け。{player.name} ({player.role_jp})</p>\n                            )\n                }\n                })}\n        </div>)\n}\n\n\nexport default WhoWon;\n","import React from 'react';\nimport WhoWon from './WhoWon';\nimport Sound from 'react-sound';\n\n\nconst GameResult = (props) => {\n    let y = props.handleWinningSide();\n\n    let who_won = (<WhoWon\n            winning_side={y}\n            players_with_roles={props.players_with_roles}\n          />)\n\n    if (y === 1) {\n        return(\n          <div className='widget'>\n            {props.bgm && <Sound\n                                  url=\"sounds/fate2.mp3\"\n                                  autoLoad={true}\n                                  volume={30}\n                                  playStatus={Sound.status.PLAYING}\n                                />}\n            <h1 className='widget widget__important-message'>人狼の勝利!</h1>\n            {who_won}\n            <button\n              className='button'\n              onClick={props.restart}\n            >\n            もう1ゲームする\n            </button>\n          </div>\n        )\n    } else if (y === 0) {\n        return(\n          <div className='widget'>\n            {props.bgm && <Sound\n                                  url=\"sounds/trumpet1.mp3\"\n                                  autoLoad={true}\n                                  volume={30}\n                                  playStatus={Sound.status.PLAYING}\n                                />}\n            <h1 className='widget widget__important-message'>村人の勝利!</h1>\n            {who_won}\n\n            <button\n              className='button-list'\n              onClick={props.restart}\n            >\n            もう1ゲームする\n            </button>\n\n\n          </div>\n      )\n  }\n\n}\n\nexport default GameResult;\n","import React from 'react';\nimport Sound from 'react-sound';\n\nconst Header = (props) => {\n  return (\n    <div className='header'>\n        {props.bgm && <Sound\n                          url=\"sounds/honobono-wonderland.mp3\"\n                          playStatus={Sound.status.PLAYING}\n                          loop={true}\n                          volume={30}\n                        />}\n        <div className='container'>\n            <h1 className='header__title'>{props.title}</h1>\n            {props.subtitle && <h2 className='header__subtitle'>{props.subtitle}</h2>}\n        </div>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  title: '人狼ゲーム'\n};\n\nexport default Header;\n","import React from 'react';\n\nconst ListToBeExiled = (props) => {\n  return(\n    <div>\n      <div className=\"widget\">\n        {props.players_with_roles\n          .filter((player) => (player.role === 'tolkative' && player.alive === false))\n          .map((player) => <div className='widget__message' key={player.name + 'talkative'}>{player.name}さんも議論に参加できます。</div>)\n        }\n      </div>\n\n      <div className='button-wrapper'>\n        {props.players_with_roles.map((player) => {\n          if (player.alive){\n            return (\n              <button\n                className='button-list'\n                key={player.name}\n                onClick={(e) => {\n                  props.choiceConfirmAtExilePhase(player)\n                  }\n                }\n              >\n                {player.name}さんを追放\n              </button>\n              )\n            } else {\n              return (<div key={player.name + 'ListToBeExiled'}></div>)\n            }\n        })}\n      </div>\n      <div className='button-wrapper-dead'>\n        {props.players_with_roles.map((player) => {\n          if (!player.alive){\n            return (\n              <button\n                disabled={true}\n                key={player.name}\n                className='button-list-dead'\n              >\n                <p>{player.name}さん</p>\n                <span>死亡</span>\n              </button>\n            )\n        } else {\n          return <div key={player.name}></div>\n        }})}\n      </div>\n      <div className=\"button-wrapper\">\n        <button\n          className='button-no-exile'\n          key={'no_exile'}\n          onClick={(e) => {\n            props.choiceConfirmAtExilePhase()\n            }\n          }\n        >\n          誰も追放しない。\n        </button>\n      </div>\n      <div className=\"button-wrapper\">\n        <button\n          className='button-no-exile'\n          key={'no_exile'}\n          onClick={(e) => {\n            props.choiceConfirmAtExilePhase('random')\n            }\n          }\n        >\n          ランダムに選ぶ。\n        </button>\n      </div>\n    </div>\n    )\n}\n\nexport default ListToBeExiled;\n","import React from 'react';\n\nconst Option = (props) => {\n  return (\n    <div className='option'>\n      <p className='option__text'>{props.count}. {props.optionText}</p>\n\n      <button\n        className='button button--link'\n        onClick={(e) => {\n          props.handleDeleteOption(props.optionText);\n        }}\n      >\n        削除\n      </button>\n    </div>\n  );\n};\n\nexport default Option;\n","import React from 'react';\nimport Option from './Option';\n\n\nconst Options = (props) => {\n  return (\n    <div>\n      <div className='widget-header'>\n        <h3 className='widget-header__title'>プレイヤーの名前を入力してください。</h3>\n          <button\n            className='button button--link'\n            onClick={props.handleDeleteOptions}>Remove All\n          </button>\n      </div>\n      {props.players.length === 0 && <p className='widget__message'>名前を入力してください｡</p>}\n      {\n        props.players.map((option, index) => (\n          <Option\n            key={option}\n            optionText={option}\n            count={index + 1}\n            handleDeleteOption={props.handleDeleteOption}\n          />\n        ))\n      }\n    </div>\n  );\n};\n\nexport default Options;\n","// Used in ShowRole.js\n\nimport React from 'react';\n\nconst OutcomeOfSeer = (props) => {\n    let current_player = props.players_with_roles[props.current_player_id];\n    let next_player = (\n        <div className='button-wrapper-next-player'>\n            <button\n                className='button-single'\n                key=\"ShowListOfPlayersNextPlayer\"\n                onClick={(e) => {\n                    props.nextPlayer(props.current_player_id, current_player.role,  Object.keys(props.players_with_roles).length)\n                  }}\n            >\n            次のプレーヤーへ\n            </button>\n        </div>\n\n        )\n\n    if (current_player.night_action === 'see' && props.hide_options && props.turn > 1){\n        try{\n            return (\n                <div className='widget wigget__message'>\n                    <div className='widget widget__message'>{props.outcome_of_seer[0].name}さんは{props.outcome_of_seer[0].saw === 0? '村人':'人狼'}です｡\n                    {next_player}</div>\n                </div>)\n        }\n\n        catch(err){\n            return (\n                <div>\n                </div>)\n        }\n    } else if (current_player.night_action === 'see_role' && props.hide_options && props.turn > 1){\n        try{\n            return (\n                <div className='widget wigget__message'>\n                    <div className='widget widget__message'>{props.outcome_of_seer[0].name}さんは{props.outcome_of_seer[0].role_jp}です｡\n                    {next_player}</div>\n                </div>)\n        }\n\n        catch(err){\n            return (\n                <div>\n                </div>)\n        }\n    } else if (current_player.night_action === 'young_see' && props.hide_options && props.turn > 1){\n        try{\n            return (\n                <div className='widget wigget__message'>\n                    <div className='widget widget__message'>{props.outcome_of_seer[0].name}さんは{Math.random() > 0.5 ? '村人':'人狼'}です｡\n                    {next_player}</div>\n                </div>)\n        }\n\n        catch(err){\n            return (\n                <div>\n                </div>)\n        }\n    } else if (props.hide_options){\n        return (\n            <div>\n            {next_player}\n            </div>)\n    } else {\n        return (\n            <div>\n            </div>)\n    }\n}\n\nexport default OutcomeOfSeer;\n","import React from 'react';\nimport Switch from \"react-switch\";\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\n\nexport default class RandomRoles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLevelChange = this.handleLevelChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.recordSelectedButton = this.recordSelectedButton.bind(this);\n    this.toggleRandomSwitchRoles = this.toggleRandomSwitchRoles.bind(this);\n    this.state = {\n      toggle: true,\n      checked: false,\n      level: 0,\n      checked_0: true,\n      checked_1: false,\n      checked_2: false\n    };\n  }\n\n  onClick(checked) {\n    this.handleToggle();\n    this.toggleRandomSwitchRoles();\n    this.handleChange(checked);\n  }\n\n  handleToggle () {\n    this.setState((prevState) => ({\n      toggle: !prevState.toggle\n    }))\n  }\n\n  toggleRandomSwitchRoles() {\n    this.props.toggleRandomSwitchRoles();\n  }\n\n  handleChange(checked) {\n      this.setState({ checked });\n    }\n\n  handleLevelChange(value) {\n    value = Number(value);\n    this.props.handle_random_level(value);\n    this.recordSelectedButton(value);\n    }\n\n  recordSelectedButton(value) {\n    if (value === 0){\n      this.setState({ checked_0: true});\n      this.setState({ checked_1: false});\n      this.setState({ checked_2: false});\n    } else if (value === 1) {\n      this.setState({ checked_0: false});\n      this.setState({ checked_1: true});\n      this.setState({ checked_2: false});\n    } else {\n      this.setState({ checked_0: false});\n      this.setState({ checked_1: false});\n      this.setState({ checked_2: true});\n    }\n  }\n\n  classInstances(classes) {\n    return classes.map((RoleClass) => (\n      new RoleClass('anonymous')\n      ))\n  }\n\n\n  render () {\n    let instances = this.classInstances(this.props.roleClasses);\n    return (\n      <div>\n        <div className='switch-wrapper'>\n          <label>\n                  <span className='switch-sentence'>ランダム化する</span>\n                  <Switch onChange={this.onClick} checked={this.state.checked} />\n          </label>\n\n          {this.state.checked &&\n            <div>\n              <RadioGroup onChange={ this.handleLevelChange } horizontal>\n                <RadioButton value='0' checked={this.state.checked_0}>\n                  小\n                </RadioButton>\n                <RadioButton value=\"1\" checked={this.state.checked_1}>\n                  中\n                </RadioButton>\n                <RadioButton value=\"2\" checked={this.state.checked_2}>\n                  大\n                </RadioButton>\n              </RadioGroup>\n              <div className=\"widget\">\n                <div className=\"widget__message\">\n                  選んだ役職を次のどれかにランダムで変更します。\n                </div>\n                <div className='widget__in_rando-wrapper'>\n                  <span className=\"widget__in_random bd\">小の場合:</span>\n                  <span className='widget__description_in_random'>\n                    {instances.map((role) => {\n                      return (\n                        <span key={role.role}>\n                          {role.random_level === 0 ? '・' + role.role_jp + ' ': ''}\n                        </span>\n                        )})}\n                  </span>\n\n                </div>\n                <div className='widget__in_rando-wrapper'>\n                  <span className=\"widget__in_random bd\">中はさらに次が加わる:</span>\n                  <span className='widget__description_in_random'>\n                    {instances.map((role) => {\n                      return (\n                        <span key={role.role}>\n                          {role.random_level === 1 ? '・' + role.role_jp + ' ': ''}\n                        </span>\n                        )})}\n                  </span>\n                </div>\n                <div className='widget__in_rando-wrapper'>\n                  <span className=\"widget__in_random bd\">大はさらに次が加わる:</span>\n                  <span className='widget__description_in_random'>\n                    {instances.map((role) => {\n                      return (\n                        <span key={role.role}>\n                          {role.random_level > 1 ? '・' + role.role_jp + ' ': ''}\n                        </span>\n                        )})}\n                  </span>\n                </div>\n              </div>\n            </div>\n          }\n        </div>\n      </div>)\n  }\n}\n","import React from 'react';\nimport Sound from 'react-sound';\n\n\nexport default class ResultOfMorning extends React.Component {\n  constructor(props) {\n    super(props);\n    this.afterWillPhase = this.afterWillPhase.bind(this);\n    this.continueGamePhase = this.continueGamePhase.bind(this);\n    this.state = {\n      phase: 'will'\n    };\n  }\n\n  afterWillPhase () {\n    this.props.handlePizzaOrder();\n    this.setState({ phase: 'after_will'})\n  }\n\n  continueGamePhase () {\n    this.setState({ phase: 'continue_game'})\n  }\n\n\n  render () {\n    if (this.state.phase === 'will') {\n      return (\n        <div className='widget'>\n        {this.props.to_be_exiled.length !== 0 &&\n          <p className='widget widget__message'>{this.props.to_be_exiled[0]}さん, 最後に遺言をどうぞ｡</p>}\n          <div className=\"button-wrapper\">\n            <button\n              className='button-single'\n              onClick={this.afterWillPhase}\n            >\n              次へ\n            </button>\n          </div>\n        </div>\n        )\n\n    } else if (this.state.phase === 'after_will') {\n      return (\n        <div>\n          <div className=\"widget\">\n            {this.props.to_be_exiled.length !== 0 ?\n              <div>\n                {this.props.bgm && <Sound\n                      url=\"sounds/katana-gesture1.mp3\"\n                      autoLoad={true}\n                      volume={30}\n                      playStatus={Sound.status.PLAYING}\n                    />}\n                <div className='widget__message'>人狼だと疑われた{this.props.to_be_exiled[0]}さんは追放されました。</div>\n              </div>\n              : <div>\n                  <div className='widget__message'>今朝は誰も追放されませんでした。</div>\n                  {this.props.bgm && <Sound\n                        url=\"sounds/kira1.mp3\"\n                        autoLoad={true}\n                        volume={30}\n                        playStatus={Sound.status.PLAYING}\n                      />}\n              </div>\n            }\n          </div>\n\n          <div className=\"button-wrapper\">\n            <button\n              className='button-single'\n              onClick={ this.props.handleWinningSide() < 0 ? this.continueGamePhase: this.props.gameResultPhase}\n            >\n              次へ\n            </button>\n          </div>\n        </div>\n        )\n    } else if (this.state.phase === 'continue_game') {\n      return (\n        <div>\n          {this.props.bgm && <Sound\n                      url=\"sounds/clock-tower-bell1.mp3\"\n                      autoLoad={true}\n                      volume={30}\n                      playStatus={Sound.status.PLAYING}\n                    />}\n          <div className=\"widget\">\n            <div className=\"widget__message\">\n              夜が来ました。。。\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <button\n              className='button-single'\n              onClick={ this.props.nightConfirmPhase}\n            >\n              次へ\n            </button>\n          </div>\n        </div>\n        )\n    } else {\n      return (<div></div>)\n    }\n  }\n}\n\n","import React from 'react';\nimport Sound from 'react-sound';\n\nconst ResultOfNight = (props) => {\n  let x = props.handleKilledAtNight(props.turn);\n  props.removeProtection(); // xの後におくこと\n  let z = props.handleSamuraiKilledAtNight(props.turn);\n  if (z !== -1) {\n    z = [...new Set(z)]\n  }\n\n  let y = props.handleWinningSide();\n\n  let suspected_players = props.mostSuspiciousPlayer(x, z);\n  let baker_alive = props.isBakerAlive();\n\n  let victim = '';\n  if (x === -1 && z === -1) {\n    victim = 'いません'\n  } else if (x === -1){\n    let name;\n    // shuffle\n    for (let i = z.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [z[i], z[j]] = [z[j], z[i]];\n    }\n\n    for (name of z) {\n      victim += ' ' + name + 'さん'\n      }\n\n  } else if (z === -1){\n    victim = x + 'さん'\n  } else {\n    if (!z.includes(x)){\n      z.push(x);\n    }\n\n    // shuffle\n    for (let i = z.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [z[i], z[j]] = [z[j], z[i]];\n    }\n\n    let name;\n    for (name of z) {\n      if (x !== z) {\n        victim += ' ' + name + 'さん'\n      }\n    }\n  }\n\n  return(\n    <div className='widget'>\n      {props.bgm && <Sound\n                      url=\"sounds/spring-mountain1.mp3\"\n                      autoLoad={true}\n                      volume={30}\n                      playStatus={Sound.status.PLAYING}\n                    />}\n      <div className='widget widget__message'>\n        <p className='option option__text'>朝になりました｡</p>\n        {baker_alive && <p className='option option__text'>パンの香ばしい香りが漂っています。</p>}\n        <p className='option option__text'>{props.turn === 1? \"\" : '昨日の犠牲者は' + victim + 'でした。'}</p>\n        <p className='option option__text'>今もっとも疑われている人は</p>\n        {suspected_players.map((player) => {\n          return <p className='option option__text bf' key={player}>{player}さん</p>;\n        })}\n        <p className='option option__text'>{!!suspected_players.length ?  'です｡': 'いませんでした｡' }</p>\n      </div>\n\n      <div className=\"button-wrapper\">\n        <button\n          className='button-single'\n          onClick={y < 0 ? props.morningPhase: props.gameResultPhase}\n        >\n          次へ\n        </button>\n      </div>\n    </div>\n    )\n\n}\n\nexport default ResultOfNight;\n","import React from 'react';\n\nexport default class RoleDescription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.state = {\n      toggle: false\n    };\n  }\n\n  handleToggle() {\n    this.setState((prevState) => {\n      return {\n        toggle: !prevState.toggle\n      };\n    });\n  }\n\n  classInstances(classes) {\n    return classes.map((RoleClass) => (\n      new RoleClass('anonymous')\n      ))\n  }\n\n  render() {\n    let instances = this.classInstances(this.props.roleClasses);\n    return (\n      <div>\n        <div className=\"button-wrapper\">\n          <button\n            className='button-single'\n            onClick={this.handleToggle}\n            >\n            {this.state.toggle ? <p>閉じる</p>: <p>各役職のルールを見る</p>}\n          </button>\n        </div>\n        <div className=\"widget\">\n          {this.state.toggle && instances.map((role) => {\n            return (\n              <div className='widget__message widget__role-description' key={role.role}>\n                <div className='widget__role-title'>\n                {role.role_jp}\n                </div>\n                {role.description}\n              </div>\n              )}\n            )\n          }\n          {this.state.toggle &&\n            <button\n            className='button'\n            onClick={this.handleToggle}\n            >\n             閉じる\n          </button>}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\n\nexport default class Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddOne = this.handleAddOne.bind(this);\n    this.handleLocalMemory = this.handleLocalMemory.bind(this);\n    this.handleMinusOne = this.handleMinusOne.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.state = {\n      count: 0\n    };\n  }\n  componentDidMount() {\n    const stringCount = localStorage.getItem(this.props.role + '-counter');\n    const count = parseInt(stringCount, 10);\n\n    if (!isNaN(count)) {\n      this.setState(() => ({ count }));\n      this.handleLocalMemory(count)\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.count !== this.state.count) {\n      localStorage.setItem(this.props.role + '-counter', this.state.count);\n    }\n  }\n\n  handleLocalMemory (count) {\n    this.props.updateNumberOfRoles(count, this.props.role)\n  }\n\n  handleAddOne() {\n    this.props.updateNumberOfRoles(1, this.props.role)\n    this.setState((prevState) => {\n      return {\n        count: prevState.count + 1\n      };\n    });\n  }\n  handleMinusOne() {\n    this.setState((prevState) => {\n      if (prevState.count === 0){\n        return\n      }\n      this.props.updateNumberOfRoles(-1, this.props.role)\n      return {\n        count: prevState.count - 1\n      };\n    });\n  }\n  handleReset() {\n    this.props.updateNumberOfRoles(0, this.props.role)\n    this.setState(() => {\n      return {\n        count: 0\n      };\n    });\n  }\n  render() {\n    return (\n      <div>\n        <div className='button-wrapper button-wrapper__role'>\n          <div className='option-role option__role'>{this.props.role_jp}: {this.state.count > 0 ? <div className='counter'>{this.state.count}</div>: this.state.count}</div>\n          <button className='button button--plus-one' onClick={this.handleAddOne}>+1</button>\n          <button className='button button--plus-one'  onClick={this.handleMinusOne}>-1</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Counter from './Counter';\n\n\n\nexport default class RoleOptions extends React.Component {\n\n  classInstances(classes) {\n    return classes.map((RoleClass) => (\n      new RoleClass('anonymous')\n      ))\n  }\n\n\n\n  render() {\n    let instances = this.classInstances(this.props.roleClasses);\n\n    return(\n      <div>\n        <div className=\"widget\">\n          {instances.map((role_class) => {\n            return (\n              <Counter\n                key={role_class.role}\n                role={role_class.role}\n                role_jp={role_class.role_jp}\n                updateNumberOfRoles={this.props.updateNumberOfRoles}\n                />\n            )\n          })}\n        </div>\n      </div>\n      )\n  }\n}\n\n","// Used in ShowRole.js\n\nimport React from 'react';\n\nexport default class ShowListOfPlayers extends React.Component {\n\n  shuffle (old_arr) {\n    let arr = [...old_arr];\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr\n  }\n\n  render () {\n    return(\n      <div>\n          <div className='button-wrapper'>\n            {this.shuffle(this.props.players_with_roles).map((player) => {\n              if (player !== this.props.current_player && player.alive && !(['werewolf', 'werewolf_god', 'weak_werewolf'].includes(this.props.current_player.role)  && !player.killable)){\n                return (\n                  <button\n                    className='button-list'\n                    key={player.name}\n\n                    onClick={() => this.props.choiceConfirmPhase([this.props.current_player_id, this.props.current_player, player, Object.keys(this.props.players_with_roles).length])}\n                  >\n                    <p>{player.name}さん</p>\n                    <span>を選ぶ｡</span>\n                  </button>\n                )\n              } else {\n                return (<div key={player.name +'else'}></div>)\n              }\n            })}\n        </div>\n        <div className='button-wrapper-dead'>\n          {this.props.players_with_roles.map((player) => {\n            if (!player.alive){\n              return (\n                <button\n                  key={player.name}\n                  disabled={true}\n                  className='button-list-dead'\n                >\n                  <p>{player.name}さん</p>\n                  <span>死亡</span>\n                </button>\n              )\n          } else {\n            return <div key={player.name}></div>\n          }})}\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\n\n","import React from 'react';\n\nconst DisplayWerewolves = (props) => {\n    let werewolf_group = ['werewolf', 'werewolf_god', 'weak_werewolf']\n\n    if (werewolf_group.includes(props.current_player.role)) {\n        return (\n            <div className='widget'>\n                {props.players_with_roles.map((player) => {\n                  if (player !== props.current_player && werewolf_group.includes(player.role)){\n                    return (\n                        <div key={player.name}>\n                            <p className='widget widget__important-message' key={player.name}>{player.name}さんも人狼です｡</p>\n                        </div>\n                    )\n                  } else {\n                    return (\n                        <div key={player.name + 'else'}></div>)\n                  }\n                })}\n\n                {props.night_action_to_be_killed.length !== 0 && <div className='widget__message'>{props.night_action_to_be_killed[0].name}さんを襲撃する予定です。違う人を襲うことも可能です。</div>}\n\n            </div>)\n    } else if (props.current_player.role === 'werewolf_believer') {\n        return (\n            <div className='widget'>\n                {props.players_with_roles.map((player) => {\n                  if (player !== props.current_player && werewolf_group.includes(player.role)){\n                    return (\n                        <p className='widget widget__important-message' key={player.name}>{player.name}さんは人狼です｡</p>\n                    )\n                  } else {\n                    return (\n                        <div key={player.name + 'else'}></div>)\n                  }\n                })}\n            </div>)\n    } else {\n        return (\n            <div key='DisplayWerewolves.js-1'></div>)\n    }\n\n}\n\nexport default DisplayWerewolves;\n","import React from 'react';\n\nconst PsychicPerceive = (props) => {\n    if (props.current_player.night_action === 'perceive' && props.to_be_exiled.length > 0) {\n        return (\n        <div className='widget widget__message'>\n            今朝追放された{props.to_be_exiled[0]}さんは{props.to_be_exiled[1]}でした。\n        </div>)\n    } else {\n        return (<span></span>)\n    }\n\n}\n\nexport default PsychicPerceive;\n","import React from 'react';\n\nconst PizzaDelivery = (props) => {\n    return(\n        <div className='widget'>\n            {props.pizza_delivery\n            .filter((order) => (order[1] === props.current_player))\n            .map((order) => <div key={order[0].name} className='widget__message_action_result'>{order[0].name}さんからピザが届きました。</div>)}\n        </div>)\n}\n\n\nexport default PizzaDelivery;\n\n","import React from 'react';\n\nconst SamuraiAction = (props) => {\n    let choice_statement = (\n        <div>\n            <div className='widget__message'>\n                斬殺する人を選ぶか, このターンは何もしないかを選んでください。\n            </div>\n        </div>\n        )\n    return (\n        <div className='widget'>\n            {(props.current_player.night_action === 'samurai_kill' && props.current_player.can_skip_action) && choice_statement}\n        </div>\n        )\n}\n\nexport default SamuraiAction;\n","import React from 'react';\nimport ShowListOfPlayers from './ShowListOfPlayers';\nimport DisplayWerewolves from './DisplayWerewolves';\nimport PsychicPerceive from './PsychicPerceive';\nimport PizzaDelivery from './PizzaDelivery';\nimport RoleDescription from './RoleDescription';\nimport SamuraiAction from './SamuraiAction';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\n\nconst ShowRole = (props) => {\n  let player = props.players_with_roles[props.current_player_id];\n  let name = player.name;\n  let turn_1_sentence = (\n    <div>\n      <p className='add-option-action'>人狼だと思う人を選んでください。</p>\n      <p>(最初の夜はどの役の人も疑うことのみをします。)</p>\n    </div>\n    )\n\n  let button_next_player = (\n      <div className='button-wrapper'>\n        <button\n          className='button-single'\n          onClick={() => (\n          props.nextPlayer(props.current_player_id, player.role, Object.keys(props.players_with_roles).length))\n          }\n        >\n        {player.night_action === 'samurai_kill' ? 'スキップして次のプレーヤーへ': '次のプレーヤーへ'}\n        </button>\n      </div>\n    )\n\n  let alive_case = (\n        <div>\n          <div className='widget widget__message'>\n            <div className='msize'>{name}さんは<div className='widget__important-message bd lsize'>{player.role_jp_disguise ? player.role_jp_disguise : player.role_jp}</div>です｡</div>\n            {(props.turn === 1 && player.role !== 'impatient_pizzeria')? turn_1_sentence: <p className='add-option-action'>{player.action_sentence}</p>}\n          </div>\n\n          {props.turn > 1 ? <PsychicPerceive\n            to_be_exiled={props.to_be_exiled}\n            turn={props.turn}\n            current_player={player}\n          /> : <span></span>}\n\n          {props.turn > 1 ? <PizzaDelivery\n            pizza_order={props.pizza_order}\n            pizza_delivery={props.pizza_delivery}\n            current_player={player}\n          /> : <span></span>}\n\n          {props.turn > 1 ? <SamuraiAction\n            current_player={player}\n          />  : <span></span>}\n          {(player.night_action === 'samurai_kill' && player.can_skip_action && props.turn > 1) && button_next_player}\n\n          <DisplayWerewolves\n            current_player={player}\n            players_with_roles={props.players_with_roles}\n            night_action_to_be_killed={props.night_action_to_be_killed}\n          />\n\n          {(props.turn === 1 || player.night_action !== 'hide') ? <ShowListOfPlayers\n            current_player={player}\n            current_player_id={props.current_player_id}\n            players_with_roles={props.players_with_roles}\n            nightActionRecord={props.nightActionRecord}\n            nextPlayer={props.nextPlayer}\n            choiceConfirmPhase={props.choiceConfirmPhase}\n          />:\n          button_next_player}\n\n          <RoleDescription\n            roleClasses={props.roleClasses}\n          />\n\n          <ScrollUpButton\n            ShowAtPosition={200}\n          />\n\n        </div>\n      )\n\n  let dead_case = (\n        <div>\n          <p className='widget widget__message'>{name}さんは死んでいます｡</p>\n          <div className='button-wrapper'>\n            <button\n              className='button-single'\n              onClick={() => (\n              props.nextPlayer(props.current_player_id, player.role, Object.keys(props.players_with_roles).length))\n              }\n            >\n             次のプレーヤーへ\n            </button>\n          </div>\n        </div>\n      )\n\n  return (<div>\n    {player.alive? alive_case: dead_case}\n  </div>)\n};\n\nexport default ShowRole;\n\n\n// import React from 'react';\n// import ShowListOfPlayers from './ShowListOfPlayers';\n// import DisplayWerewolves from './DisplayWerewolves';\n// import PsychicPerceive from './PsychicPerceive';\n// import PizzaDelivery from './PizzaDelivery';\n// import SamuraiAction from './SamuraiAction';\n\n// const ShowRole = (props) => {\n//   let player = props.players_with_roles[props.current_player_id];\n//   let name = player.name;\n//   let turn_1_sentence = (\n//     <div>\n//       <p className='add-option-action'>人狼だと思う人を選んでください。</p>\n//       <p>(最初の夜はどの役の人も疑うことのみをします。)</p>\n//     </div>\n//     )\n\n//   let button_next_player = (\n//       <div className='button-wrapper'>\n//         <button\n//           className='button-single'\n//           onClick={() => (\n//           props.nextPlayer(props.current_player_id, player.role, Object.keys(props.players_with_roles).length))\n//           }\n//         >\n//         {player.night_action === 'samurai_kill' ? 'スキップして次のプレーヤーへ': '次のプレーヤーへ'}\n//         </button>\n//       </div>\n//     )\n\n//   if (player.alive){\n//     return(\n//       <div>\n//         <div className='widget widget__message'>\n//           <div className='msize'>{name}さんは<div className='widget__important-message bd lsize'>{player.role_jp}</div>です｡</div>\n//           {(props.turn === 1 && player.role !== 'impatient_pizzeria')? turn_1_sentence: <p className='add-option-action'>{player.action_sentence}</p>}\n//         </div>\n\n//         {props.turn > 1 ? <PsychicPerceive\n//           to_be_exiled={props.to_be_exiled}\n//           turn={props.turn}\n//           current_player={player}\n//         /> : <span></span>}\n\n//         {props.turn > 1 ? <PizzaDelivery\n//           pizza_order={props.pizza_order}\n//           pizza_delivery={props.pizza_delivery}\n//           current_player={player}\n//         /> : <span></span>}\n\n//         {props.turn > 1 ? <SamuraiAction\n//           current_player={player}\n//         />  : <span></span>}\n//         {(player.night_action === 'samurai_kill' && player.can_skip_action && props.turn > 1) && button_next_player}\n\n//         <DisplayWerewolves\n//           current_player={player}\n//           players_with_roles={props.players_with_roles}\n//           night_action_to_be_killed={props.night_action_to_be_killed}\n//         />\n\n//         {(props.turn === 1 || player.night_action !== 'hide') ? <ShowListOfPlayers\n//           current_player={player}\n//           current_player_id={props.current_player_id}\n//           players_with_roles={props.players_with_roles}\n//           nightActionRecord={props.nightActionRecord}\n//           nextPlayer={props.nextPlayer}\n//           choiceConfirmPhase={props.choiceConfirmPhase}\n//         />:\n//         button_next_player}\n\n\n//       </div>\n//       );\n//   } else {\n//     return (\n//       <div>\n//         <p className='widget widget__message'>{name}さんは死んでいます｡</p>\n//         <div className='button-wrapper'>\n//           <button\n//             className='button-single'\n//             onClick={() => (\n//             props.nextPlayer(props.current_player_id, player.role, Object.keys(props.players_with_roles).length))\n//             }\n//           >\n//            次のプレーヤーへ\n//           </button>\n//         </div>\n//       </div>)\n//   }\n\n// };\n\n// export default ShowRole;\n","import React from 'react';\nimport Sound from 'react-sound';\n\n\nexport default class Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      remaining : this.props.setTimerSeconds()\n    };\n  }\n\n  countDown() {\n      if(this.state.remaining > 0) {\n            this.setState((prevState) => ({\n                  remaining : prevState.remaining - 1\n            }));\n       }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.countDown(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    if (this.state.remaining > 0) {\n      return (\n        <div className='widget'>\n        <h2 className='widget__message'>朝の追放会議</h2>\n          <p className='widget__message'>残り<span className='timer'>{Math.floor(this.state.remaining / 60)}分{this.state.remaining % 60}秒</span>以内に追放する人を決めてください。</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {this.props.bgm && <Sound\n                url=\"sounds/fate1.mp3\"\n                autoLoad={true}\n                volume={50}\n                playStatus={Sound.status.PLAYING}\n              />}\n          <div className='widget'>\n            <p className='widget__message'>時間になりました。 投票で追放する人を決めてください。</p>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\n\n","\nclass Player {\n  constructor(name){\n    this.name = name;\n    this.alive = true\n    this.protected = false\n  }\n}\n\nclass Villager extends Player{\n  constructor(name){\n    super(name);\n    this.role = 'villager';\n    this.role_jp = '村人';\n    this.side = 0; // 勝敗のカウントに使われる陣営\n    this.winning_side = 0;\n    this.saw = 0 // 占い結果\n    this.perceived = '村人' // 霊能結果\n    this.killable = true; // 人狼に殺される可能性\n    this.action_sentence = 'もっとも疑わしい人を一人選んでください｡';\n    this.night_action = 'suspect';\n    this.random_level = 0; // 役職をランダムにするときの難易度\n    this.description = '人に化けた狼が暮らす村に住む。夜には人狼だと疑う人にこっそり投票する。'\n  }\n}\n\nclass Werewolf extends Player{\n  constructor(name){\n    super(name);\n    this.role = 'werewolf';\n    this.role_jp = '人狼';\n    this.side = 1;\n    this.winning_side = 1\n    this.saw = 1;\n    this.perceived = '人狼'\n    this.killable = false;\n    this.action_sentence = '今晩襲う人を決めてください｡';\n    this.night_action = 'kill'\n    this.random_level = 0;\n    this.description = '夜に殺害する人を一人選ぶ。 最後の人狼に最終決定権がある。人狼同士は誰が人狼かわかっている。 人狼同士は殺し合えない。'\n  }\n}\n\nclass Seer extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'seer';\n    this.role_jp = '占い師';\n    this.action_sentence = '今晩占う人を決めてください｡';\n    this.night_action = 'see';\n    this.description = '村人側。 毎晩誰か生きている一人を占い, その人が村人側か人狼側かを知ることができる。 ただし役職は知ることができない。'\n  }\n}\n\nclass Knight extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'knight';\n    this.role_jp = '騎士';\n    this.action_sentence = '今晩守る人を決めてください｡';\n    this.night_action = 'protect'\n    this.description = '村人側。 毎晩指定した一人を人狼の襲撃から守る。自分は守ることはできない。';\n  }\n}\n\nclass Traitor extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'traitor';\n    this.role_jp = '裏切り者';\n    this.winning_side = 1;\n    this.description = '人狼側。 しかし占いの結果と霊媒結果には村人側と出る。夜には村人と同様に投票を行う。人狼は誰が裏切り者か知らず, 裏切り者も誰が人狼かわからない。';\n  }\n}\n\nclass WerewolfBeliever extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'werewolf_believer';\n    this.role_jp = '狼信者';\n    this.winning_side = 1;\n    this.description = '人狼側。しかし占いの結果と霊媒結果には村人側と出る。夜には村人と同様に投票を行う。 狼信者は誰が人狼か知っている。 ただし人狼は誰が狼信者なのかわからない。';\n  }\n}\n\nclass Baker extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'baker';\n    this.role_jp = 'パン屋さん';\n    this.description = '村人側。パン屋さんが生きていると毎朝焼きたてのパンの香りが漂ってくる。夜には村人同様に投票を行う。'\n  }\n}\n\nclass Psychic extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'psychic';\n    this.role_jp = '霊媒師';\n    this.night_action = 'perceive';\n    this.description = '村人側。 毎晩その日の朝に処刑された人が村人か人狼か知ることができる。ただし役職はわからない。そして村人同様に投票を行う。';\n  }\n}\n\nclass Haunted extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'haunted';\n    this.role_jp = '狼憑き';\n    this.saw = 1;\n    this.perceived = '人狼'\n    this.random_level = 1;\n    this.description = '村人側。 狼にとりつかれた村人。 占い結果と霊媒結果に人狼と出てしまう。 そして村人同様に投票を行う。';\n  }\n}\n\nclass WerewolfGod extends Werewolf {\n  constructor(name){\n    super(name);\n    this.role = 'werewolf_god';\n    this.role_jp = '神狼';\n    this.saw = 0;\n    this.perceived = '神狼';\n    this.random_level = 1;\n    this.description = '人狼側。 ただし占い結果に村人と出る。 霊媒結果は神狼となる。夜には通常の人狼同様に殺害する人を一人選ぶ。人狼と狼信者には人狼として知られている。'\n  }\n}\n\nclass Sage extends Seer {\n  constructor(name) {\n    super(name);\n    this.role = 'sage';\n    this.role_jp = '賢者';\n    this.night_action ='see_role';\n    this.random_level = 1;\n    this.description = '村人側。毎晩役職まで知ることができる占いを行う。'\n  }\n}\n\nclass Ninjya extends Villager {\n  constructor(name) {\n    super(name);\n    this.role = 'ninjya';\n    this.role_jp = '忍者';\n    this.night_action = 'hide';\n    this.protected = true;\n    this.action_sentence = '隠れ身の術!!';\n    this.description = '村人側。 隠れ身の術で狼の襲撃から逃れることができる。その代わり夜の投票に参加できない。'\n  }\n}\n\nclass WeakWerewolf extends Werewolf {\n  constructor(name){\n    super(name);\n    this.role = 'weak_werewolf';\n    this.role_jp = '弱人狼';\n    this.night_action = 'weak_kill'\n    this.description = '人狼側。 夜の襲撃に50%の確率で失敗する以外は通常の人狼'\n  }\n}\n\nclass LoneWerewolf extends Werewolf {\n  constructor(name){\n    super(name);\n    this.role = 'lone_werewolf';\n    this.role_jp = '一匹狼';\n    this.killable = true;\n    this.random_level = 1;\n    this.description = '人狼側。 他の人狼や狼信者にも正体を知られていない人狼。また他の人狼が誰なのかわからない。仲間の人狼を殺す可能性と殺される可能性がある。'\n  }\n}\n\nclass Pizzeria extends Villager {\n  constructor(name) {\n    super(name);\n    this.role = 'pizzeria';\n    this.role_jp = 'ピザ屋さん';\n    this.night_action = 'deliver_pizza';\n    this.action_sentence = 'ピザをお届けする人を選んでください。';\n    this.description = '村人側。毎晩ピザを届ける人を選ぶ。ピザは次の日の夜に届く。届けた相手にはピザ屋だとバレる。'\n  }\n}\n\nclass ImpatientPizzeria extends Pizzeria {\n  constructor(name) {\n    super(name);\n    this.role = 'impatient_pizzeria';\n    this.role_jp = 'せっかちピザ屋さん';\n    this.night_action = 'fast_deliver_pizza';\n    this.description = '村人側。毎晩ピザを届ける人を選ぶ。ピザは次の日の夜に届く。届けた相手にはピザ屋だとバレる。せっかちなので最初の夜からピザの送り先を指定する。'\n  }\n}\n\nclass WerewolfLinguist extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'werewolf_linguist';\n    this.role_jp = '狼言語学者';\n    this.winning_side = 1;\n    this.random_level = 1;\n    this.description = '人狼側。 しかし占いの結果と霊媒結果には村人側と出る。夜には村人と同様に投票を行う。人狼は誰が狼言語学者か知らず, 狼言語学者も誰が人狼かわからない。狼の言語がわかり狼に襲撃されると, 命を助ける代わりに狼にされる。変身後は狼と同様。騎士に守られた場合には変身しない。';\n  }\n}\n\nclass Wolfman extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'wolfman';\n    this.role_jp = '狼男';\n    this.night_action = 'kill';\n    this.random_level = 1;\n    this.action_sentence = '狼に変身しました。 今晩襲う人を決めてください｡';\n    this.description = '村人側。しかし夜には狼に変身してしまう。人狼や狼信者に正体はバレない。';\n  }\n}\n\nclass Tolkative extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'tolkative';\n    this.role_jp = 'おしゃべり';\n    this.description = '村人側。死んでも追放会議に参加できる。';\n  }\n}\n\nclass Samurai extends Villager{\n  constructor(name){\n    super(name);\n    this.role = 'samurai';\n    this.role_jp = '侍';\n    this.night_action = 'samurai_kill';\n    this.you_can_kill = 1;\n    this.can_skip_action = true;\n    this.action_sentence = '斬り殺す人を一人選べます。';\n    this.random_level = 1\n    this.description = '村人側。ゲーム中に一回のみ選んだ人を斬り殺す。騎士に守られた人や忍者でも容赦しない。';\n  }\n}\n\nclass BadSamurai extends Samurai{\n  constructor(name){\n    super(name);\n    this.role = 'bad_samurai';\n    this.role_jp = '人斬り侍';\n    this.action_sentence = '斬り殺す人を選んでください。'\n    this.you_can_kill = 10000;\n    this.can_skip_action = false;\n    this.random_level = 2;\n    this.description = '村人側。最凶の侍。毎ターン必ず一人を選んで斬殺する。騎士に守られた人や忍者でも容赦しない。';\n  }\n}\n\nclass YoungSeer extends Seer{\n  constructor(name){\n    super(name);\n    this.role = 'young_seer';\n    this.role_jp = '半人前占い師';\n    this.role_jp_disguise = '占い師';\n    this.night_action = 'young_see';\n    this.description = '村人側。 占い結果がデタラメな未熟な占い師。自分の役職には占い師と表示されている。'\n  }\n}\n\nexport {Villager, Werewolf, Seer, Knight, Traitor, WerewolfBeliever, Baker, Psychic, Haunted, WerewolfGod, Sage, Ninjya, WeakWerewolf, LoneWerewolf, Pizzeria, ImpatientPizzeria, WerewolfLinguist, Wolfman, Tolkative, Samurai, BadSamurai, YoungSeer};\n","import React from 'react';\n// import logo from './logo.svg';\nimport './styles/App.scss';\n\nimport AddOption from './components/AddOption';\nimport BGMOnOff from './components/BGMOnOff';\nimport CheckNumberOfPlayersAndRoles from './components/CheckNumberOfPlayersAndRoles';\nimport ConfirmIdentity from './components/ConfirmIdentity';\nimport ConfirmChoice from './components/ConfirmChoice';\nimport ConfirmChoiceAtExile from './components/ConfirmChoiceAtExile';\nimport GameResult from './components/GameResult';\nimport Header from './components/Header';\nimport ListToBeExiled from './components/ListToBeExiled';\nimport Options from './components/Options';\nimport OutcomeOfSeer from './components/OutcomeOfSeer';\nimport RandomRoles from './components/RandomRoles';\nimport ResultOfMorning from './components/ResultOfMorning';\nimport ResultOfNight from './components/ResultOfNight';\nimport RoleDescription from './components/RoleDescription';\nimport RoleOptions from './components/RoleOptions';\nimport ShowRole from './components/ShowRole';\nimport Timer from './components/Timer';\nimport {Villager, Werewolf, Seer, Knight, Traitor, WerewolfBeliever, Baker, Psychic, Haunted, WerewolfGod, Sage, Ninjya, WeakWerewolf, LoneWerewolf, Pizzeria, ImpatientPizzeria, WerewolfLinguist, Wolfman, Tolkative, Samurai, BadSamurai, YoungSeer} from './components/Roles';\n\n\n\n\nclass WerewolfGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteOptions = this.handleDeleteOptions.bind(this);\n    this.handlePick = this.handlePick.bind(this);\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.handleBGM = this.handleBGM.bind(this);\n    this.handleDeleteOption = this.handleDeleteOption.bind(this);\n    this.updateNumberOfRoles = this.updateNumberOfRoles.bind(this);\n    this.determineRoles = this.determineRoles.bind(this);\n    this.nightActionRecord = this.nightActionRecord.bind(this);\n    this.handle_random_level = this.handle_random_level.bind(this);\n    this.handleKilledAtNight = this.handleKilledAtNight.bind(this);\n    this.handleSamuraiKilledAtNight = this.handleSamuraiKilledAtNight.bind(this);\n    this.handlePizzaOrder = this.handlePizzaOrder.bind(this);\n    this.handleWinningSide = this.handleWinningSide.bind(this);\n    this.mostSuspiciousPlayer = this.mostSuspiciousPlayer.bind(this);\n    this.morningPhase = this.morningPhase.bind(this);\n    this.nightPhase = this.nightPhase.bind(this);\n    this.nightConfirmPhase = this.nightConfirmPhase.bind(this);\n    this.choiceConfirmPhase = this.choiceConfirmPhase.bind(this);\n    this.gameResultPhase = this.gameResultPhase.bind(this);\n    this.isBakerAlive = this.isBakerAlive.bind(this);\n    this.choiceConfirmAtExilePhase = this.choiceConfirmAtExilePhase.bind(this);\n    this.nextPlayer = this.nextPlayer.bind(this);\n    this.nextTurn = this.nextTurn.bind(this);\n    this.exile = this.exile.bind(this);\n    this.exile2 = this.exile2.bind(this);\n    this.removeProtection = this.removeProtection.bind(this);\n    this.resetSuspectedPlayers = this.resetSuspectedPlayers.bind(this);\n    this.resetToBeKilledPlayer = this.resetToBeKilledPlayer.bind(this);\n    this.resetToBeSamuraiKilledPlayer = this.resetToBeSamuraiKilledPlayer.bind(this);\n    this.restart = this.restart.bind(this);\n    this.setTimerSeconds = this.setTimerSeconds.bind(this);\n    this.toggleRandomSwitchRoles = this.toggleRandomSwitchRoles.bind(this);\n    this.prop = {\n       ROLES: {\n        'villager': Villager,\n        'werewolf': Werewolf,\n        'seer': Seer,\n        'knight': Knight,\n        'traitor': Traitor,\n        'werewolf_believer': WerewolfBeliever,\n        'baker': Baker,\n        'psychic': Psychic,\n        'haunted': Haunted,\n        'werewolf_god': WerewolfGod,\n        'sage': Sage,\n        'ninjya': Ninjya,\n        'weak_werewolf': WeakWerewolf,\n        'lone_werewolf': LoneWerewolf,\n        'pizzeria': Pizzeria,\n        'impatient_pizzeria': ImpatientPizzeria,\n        'werewolf_linguist': WerewolfLinguist,\n        'wolfman': Wolfman,\n        'tolkative': Tolkative,\n        'samurai': Samurai,\n        'bad_samurai': BadSamurai,\n        'young_seer': YoungSeer\n      }\n    };\n\n    let n_each_role = {};\n    Object.keys(this.prop.ROLES).map((role) => n_each_role[role] = 0);\n\n    this.state = {\n      bgm: true,\n      players: [],\n      players_with_roles: [],\n      role_determined: false,\n      phase: 'night_confirm',\n      n_each_role: n_each_role,\n      suspected_players: [],\n      current_player_id: 0,\n      night_action_to_be_killed: [],\n      night_action_to_be_samurai_killed: [],\n      to_be_exiled: [],\n      outcome_of_seer: [],\n      pizza_order: [],\n      pizza_delivery: [],\n      random_level: 0,\n      to_be_confirmed: [],\n      hide_options: false,\n      random_switch_roles: false,\n      turn: 1\n    };\n  }\n\n\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem('players');\n      const players = JSON.parse(json);\n\n      if (players) {\n        this.setState(() => ({ players }));\n      }\n    } catch (e) {\n      // Do nothing at all\n    }\n\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.players.length !== this.state.players.length) {\n      const json = JSON.stringify(this.state.players);\n      localStorage.setItem('players', json);\n    }\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n  handleDeleteOptions() {\n    this.setState(() => ({ players: [] }));\n  }\n  handleDeleteOption(optionToRemove) {\n    this.setState((prevState) => ({\n      players: prevState.players.filter((option) => optionToRemove !== option)\n    }));\n  }\n  handlePick() {\n    const randomNum = Math.floor(Math.random() * this.state.players.length);\n    const option = this.state.players[randomNum];\n    alert(option);\n  }\n  handleAddOption(option) {\n    if (!option) {\n      return '名前を入力してください。';\n    } else if (this.state.players.indexOf(option) > -1) {\n      return 'この名前はすでに使われています｡';\n    }\n\n    this.setState((prevState) => ({\n      players: prevState.players.concat(option)\n    }));\n  }\n\n  handleBGM() {\n    this.setState((prevState) => ({\n      bgm: !prevState.bgm\n    }))\n  }\n\n\n\n  updateNumberOfRoles(num, role){\n    this.setState((prevState) => (prevState.n_each_role[role] = num + (num) * (num) *prevState.n_each_role[role]));\n  }\n\n  determineRoles(){\n    if (this.numberOfPlayers() === this.numberOfSelectedRoles()){\n      this.setState(() => ({ role_determined: true }));\n\n      let level = this.state.random_level;\n      let roles = [];\n      let n_each_role = this.state.n_each_role;\n      let role;\n      for (role in n_each_role) {\n        while (n_each_role[role] > 0) {\n          let random_role = role;\n          if (this.state.random_switch_roles) {\n            random_role = this.randomlySwitchRoles(role, level);\n          }\n          roles.push(random_role);\n          n_each_role[role] --;\n        }\n      }\n\n      // shuffle roles\n      for (let i = roles.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [roles[i], roles[j]] = [roles[j], roles[i]];\n      }\n\n      // shuffle roles again\n      for (let i = roles.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [roles[i], roles[j]] = [roles[j], roles[i]];\n      }\n\n      // Assign roles to players\n      for (let i=0; i < roles.length; i++) {\n        let player = new this.prop.ROLES[roles[i]](this.state.players[i])\n        this.setState((prevState) => ({\n          players_with_roles: prevState.players_with_roles.concat(player)\n        }));\n\n        }\n\n    } else{\n      console.log('n_roles != n_players');\n      console.log(this.numberOfPlayers());\n      console.log(this.numberOfSelectedRoles());\n    }\n  }\n\n  randomlySwitchRoles(role, level=0) {\n    let role_list = Object.keys(this.prop.ROLES);\n    let CurRole = new this.prop.ROLES[role]('anonymous');\n    let side = CurRole.side;\n\n    const j = Math.floor(Math.random() * role_list.length)\n    let new_role = role_list[j];\n    let NewRole = new this.prop.ROLES[new_role]('anonymous');\n\n    if (level === 2) {\n      if (NewRole.side === side) {\n        return new_role\n      } else {\n        return role\n      }\n    } else if (level === 0){\n      if (NewRole.side === side && NewRole.random_level === 0) {\n        return new_role\n      } else {\n        return role\n      }\n    } else {\n      if (NewRole.side === side && NewRole.random_level <= 1) {\n              return new_role\n            } else {\n              return role\n            }\n     }\n  }\n\n  toggleRandomSwitchRoles() {\n    this.setState((prevState) => ({\n      random_switch_roles: !prevState.random_switch_roles\n    }))\n  }\n\n  handle_random_level(value) {\n    this.setState( { random_level: value })\n  }\n\n\n\n  nightActionRecord(current_player_id, player, target_player, n_players) {\n    // turn 1 special action\n    if (player.night_action === 'fast_deliver_pizza') {\n      this.setState((prevState) => ({\n          pizza_order: [...this.state.pizza_order, ...[[player, target_player]]]})\n        )\n    //  turn 1 normal action\n    } else if (this.state.turn === 1 || ['suspect', 'perceive'].includes(player.night_action)) {\n      this.setState((prevState) => ({\n              suspected_players: prevState.suspected_players.concat(target_player.name)\n            }));\n    } else if (player.night_action === 'kill') {\n      this.setState((prevState) => ({\n              night_action_to_be_killed: [target_player]\n            }));\n    } else if (player.night_action === 'weak_kill') {\n      let prob = Math.random();\n      if (prob > 0.5) {\n        this.setState((prevState) => ({\n                night_action_to_be_killed: [target_player]\n              }));\n      }\n    } else if (player.night_action === 'samurai_kill') {\n      this.setState((prevState) => ({\n              night_action_to_be_samurai_killed: [...this.state.night_action_to_be_samurai_killed,target_player]\n            }));\n      player.you_can_kill -= 1;\n      if (player.you_can_kill === 0) {\n        player.night_action = 'suspect';\n        player.action_sentence = 'もっとも疑わしい人を一人選んでください｡ (刀が錆びている。。。)'\n      }\n    } else if (['see', 'see_role', 'young_see'].includes(player.night_action)) {\n      this.setState({ outcome_of_seer: [target_player]})\n    } else if (player.night_action === 'protect') {\n      target_player.protected = true\n    } else if (player.night_action === 'deliver_pizza') {\n      this.setState((prevState) => ({\n          pizza_order: [...this.state.pizza_order, ...[[player, target_player]]]})\n        )\n    } else if (player.night_action === 'hide') {\n      // just hiding\n    } else {\n      console.log('unknown night action');\n      console.log(current_player_id, player, target_player, n_players);\n    }\n\n    this.setState({hide_options: true});\n}\n\n\n  nextPlayer(currentPlayerId, current_role, n_players) {\n    this.setState({ outcome_of_seer: []})\n\n    currentPlayerId ++;\n    if (currentPlayerId < n_players){\n     this.setState(() => ({ current_player_id: currentPlayerId }));\n\n     this.setState(() => ({\n     phase: 'night_confirm'\n     }))\n\n    } else if (currentPlayerId === n_players){\n      this.setState(() => ({ current_player_id: 0 }));\n      this.setState(() => ({ phase: 'night_action_completed' }));\n    } else {\n      console.log('something wrong with nextPlayer')\n      console.log('next player')\n      console.log(currentPlayerId)\n      console.log(n_players)\n    }\n\n    this.setState({hide_options: false});\n  }\n\n  handleKilledAtNight(turn){\n    // This case is for development purpose\n    if (this.state.night_action_to_be_killed.length === 0) {\n      return -1\n    }\n\n    let killed_player = this.state.night_action_to_be_killed[0];\n    if (turn === 1 || killed_player.protected) {\n      return -1\n    }\n\n    if (killed_player.role === 'werewolf_linguist') {\n      killed_player.role = 'werewolf';\n      killed_player.role = 'werewolf';\n      killed_player.role_jp = '人狼';\n      killed_player.side = 1;\n      killed_player.winning_side = 1\n      killed_player.saw = 1;\n      killed_player.perceived = '人狼'\n      killed_player.killable = false;\n      killed_player.action_sentence = '今晩襲う人を決めてください｡';\n      killed_player.night_action = 'kill'\n      killed_player.description = '夜に殺害する人を一人選ぶ。 最後の人狼に最終決定権がある。人狼同士は誰が人狼かわかっている。 人狼同士は殺し合えない。'\n      return -1\n    }\n\n    if (turn !== 1) {\n      killed_player.alive = false;\n    }\n    return killed_player.name\n  }\n\n  handleSamuraiKilledAtNight(turn){\n    let samurai_killed_players = this.state.night_action_to_be_samurai_killed;\n\n    if (turn === 1 || samurai_killed_players.length === 0) {\n      return -1\n    } else {\n      let player;\n      for (player of samurai_killed_players) {\n        player.alive = false;\n      }\n\n      return samurai_killed_players.map((player) => (player.name))\n    }\n  }\n\n\n  mostSuspiciousPlayer(dead, dead_list){\n    let memo = {}\n    let x;\n    for (x of this.state.suspected_players) {\n      if (x === dead){ continue;}\n      if (dead_list !== -1 && dead_list.includes(x)){ continue;}\n\n      if (memo[x]) {\n        memo[x] ++;\n      } else {\n        memo[x] = 1;\n      }\n    }\n\n    let max = 0\n    let i;\n    for (i of Object.values(memo)){\n      if (i > max){\n        max = i\n      }\n    }\n\n    let result = []\n    for (let key of Object.keys(memo)) {\n      if (memo[key] === max) {\n        result.push(key)\n      }\n    }\n\n    return result\n  }\n\n  exile(player) {\n    if (player !== undefined){\n      player.alive = false;\n      this.exile2(player.name, player.perceived); // Can't do exile2(player)\n    } else {\n      this.setState({ to_be_exiled: []})\n    }\n    this.morningActionCompletedPhase();\n    this.resetSuspectedPlayers();\n    this.resetToBeKilledPlayer();\n    this.resetToBeSamuraiKilledPlayer();\n  }\n  exile2(player, perceived) {\n    this.setState((prevState) => ({to_be_exiled: [player, perceived] }));\n  }\n\n  morningActionCompletedPhase() {\n    this.setState((prevState) => ({\n    phase: (prevState.phase = 'morning_action_completed')\n    }));\n  }\n\n  removeProtection () {\n    this.state.players_with_roles\n    .filter((player) => (player.role !== 'ninjya'))\n    .forEach((player) => {player.protected = false})\n  }\n\n  handlePizzaOrder () {\n    this.setState((prevState) => ({\n      pizza_delivery: prevState.pizza_order\n      }));\n    this.setState({pizza_order: []});\n    }\n\n\n  setTimerSeconds() {\n    let n_alive_players = this.numberOfAliveVillagers() + this.numberOfAliveWerewolves;\n\n    if (n_alive_players < 4) {\n      return 180\n    } else if (n_alive_players === 4) {\n      return 240\n    } else if (n_alive_players === 5) {\n      return 300\n    } else {\n      return 360\n    }\n  }\n\n  resetSuspectedPlayers () {\n    this.setState(() => ({ suspected_players: []}))\n  }\n\n  resetToBeKilledPlayer () {\n    this.setState(() => ({ night_action_to_be_killed: []}))\n  }\n\n  resetToBeSamuraiKilledPlayer () {\n    this.setState(() => ({ night_action_to_be_samurai_killed: []}))\n  }\n\n  restart() {\n    console.log('restart')\n    this.setState(() => ({ players_with_roles: [] }));\n    this.setState(() => ({ role_determined: false }));\n    this.setState(() => ({ phase: 'night_confirm' }));\n    this.setState(() => ({ suspected_players: [] }));\n    this.setState(() => ({ current_player_id: 0 }));\n    this.setState(() => ({ night_action_to_be_killed: [] }));\n    this.setState(() => ({ night_action_to_be_samurai_killed: [] }));\n    this.setState(() => ({ to_be_exiled: []}));\n    this.setState(() => ({ to_be_confirmed: []}));\n    this.setState(() => ({ outcome_of_seer: []}));\n    this.setState(() => ({ pizza_order: []}));\n    this.setState(() => ({ pizza_delivery: []}));\n    this.setState(() => ({ random_switch_roles: false }));\n    this.setState(() => ({ turn: 1}));\n  }\n\n  isBakerAlive() {\n    let alive = false;\n    let x;\n    for (x of this.state.players_with_roles) {\n      if (x.role === 'baker' && x.alive) {\n        alive = true\n      }\n    }\n    return alive\n  }\n\n  numberOfPlayers(){\n    return(this.state.players.length)\n  }\n\n  numberOfSelectedRoles(){\n    return(Object.values(this.state.n_each_role).reduce((a,b) => a+b, 0))\n  }\n\n  numberOfAliveVillagers() {\n    let count = 0\n    let x;\n    for (x of this.state.players_with_roles) {\n      if (x.side === 0 && x.alive) {\n        count ++;\n      }\n    }\n    return count\n  }\n\n  numberOfAliveWerewolves() {\n    let count = 0\n    let x;\n    for (x of this.state.players_with_roles) {\n      if (x.side === 1 && x.alive) {\n        count ++;\n      }\n    }\n    return count\n  }\n\n  handleWinningSide() {\n    if (this.numberOfAliveVillagers() <= this.numberOfAliveWerewolves()) {\n      return 1\n    } else if (this.numberOfAliveWerewolves() === 0) {\n      return 0\n    } else {\n      return -1\n    }\n  }\n\n\n\n  morningPhase() {\n    this.setState(() => ({\n    phase: 'morning'\n    }))\n    this.nextTurn()\n  }\n\n  nightPhase() {\n    this.setState(() => ({\n    phase: 'night'\n    }))\n  }\n\n  nightConfirmPhase() {\n    this.setState(() => ({\n    phase: 'night_confirm'\n    }))\n  }\n\n  choiceConfirmPhase(info) {\n    this.setState({ to_be_confirmed:[info]});\n    this.setState(() => ({\n    phase: 'choice_confirm'\n    }))\n  }\n\n  choiceConfirmAtExilePhase(info) {\n    this.setState({ to_be_confirmed:info});\n    this.setState(() => ({\n    phase: 'choice_confirm_at_exile'\n    }))\n  }\n\n  gameResultPhase(){\n    this.setState({ phase: 'game_result'})\n  }\n\n  nextTurn() {\n    this.setState((prevState) => ({\n      turn: prevState.turn + 1\n    }))\n  }\n\n  render() {\n    const subtitle = '村人 vs 人狼';\n    let register = (<div>\n        <Header\n          subtitle={subtitle}\n          bgm={this.state.bgm}\n          />\n        <div className=\"container\">\n\n          <div className=\"widget\">\n            <Options\n              players={this.state.players}\n              handleDeleteOptions={this.handleDeleteOptions}\n              handleDeleteOption={this.handleDeleteOption}\n            />\n            <AddOption\n              handleAddOption={this.handleAddOption}\n            />\n          </div>\n\n          <RoleDescription\n            roleClasses={Object.values(this.prop.ROLES)}\n          />\n\n          <RoleOptions\n            updateNumberOfRoles={this.updateNumberOfRoles}\n            roleClasses={Object.values(this.prop.ROLES)}\n          />\n\n          <CheckNumberOfPlayersAndRoles\n            players={this.state.players}\n            n_each_role={this.state.n_each_role}\n            determineRoles={this.determineRoles}\n          />\n\n          <BGMOnOff\n            handleBGM={this.handleBGM}\n          />\n          <RandomRoles\n            toggleRandomSwitchRoles={this.toggleRandomSwitchRoles}\n            random_level={this.random_level}\n            handle_random_level={this.handle_random_level}\n            roleClasses={Object.values(this.prop.ROLES)}\n          />\n        </div>\n\n      </div>);\n\n    let night_confirm = (\n      <div>\n        <ConfirmIdentity\n          current_player_id={this.state.current_player_id}\n          players_with_roles={this.state.players_with_roles}\n          nightPhase={this.nightPhase}\n        />\n      </div>)\n\n    let choice_confirm = (\n      <div>\n        <ConfirmChoice\n          to_be_confirmed={this.state.to_be_confirmed}\n          nightPhase={this.nightPhase}\n          nightActionRecord={this.nightActionRecord}\n          hide_options={this.state.hide_options}\n        />\n        <OutcomeOfSeer\n          current_player_id={this.state.current_player_id}\n          players_with_roles={this.state.players_with_roles}\n          outcome_of_seer={this.state.outcome_of_seer}\n          nextPlayer={this.nextPlayer}\n          turn={this.state.turn}\n          hide_options={this.state.hide_options}\n        />\n      </div>)\n\n    let choice_confirm_at_exile = (\n      <div>\n        <ConfirmChoiceAtExile\n          players_with_roles={this.state.players_with_roles}\n          to_be_confirmed={this.state.to_be_confirmed}\n          morningPhase={this.morningPhase}\n          exile={this.exile}\n        />\n      </div>)\n\n    let night = (\n      <div>\n      <ShowRole\n        bgm={this.state.bgm}\n        current_player_id={this.state.current_player_id}\n        players_with_roles={this.state.players_with_roles}\n        turn={this.state.turn}\n        nextPlayer={this.nextPlayer}\n        outcome_of_seer={this.state.outcome_of_seer}\n        choiceConfirmPhase={this.choiceConfirmPhase}\n        to_be_exiled={this.state.to_be_exiled}\n        night_action_to_be_killed={this.state.night_action_to_be_killed}\n        pizza_order={this.state.pizza_order}\n        pizza_delivery={this.state.pizza_delivery}\n        roleClasses={Object.values(this.prop.ROLES)}\n      />\n      </div>\n      );\n\n    let night_result = (\n      <div>\n        <ResultOfNight\n          bgm={this.state.bgm}\n          suspected_players={this.suspected_players}\n          night_action_to_be_killed={this.night_action_to_be_killed}\n          night_action_to_be_samurai_killed={this.night_action_to_be_samurai_killed}\n          handleKilledAtNight={this.handleKilledAtNight}\n          handleSamuraiKilledAtNight={this.handleSamuraiKilledAtNight}\n          handleWinningSide={this.handleWinningSide}\n          mostSuspiciousPlayer={this.mostSuspiciousPlayer}\n          morningPhase={this.morningPhase}\n          removeProtection={this.removeProtection}\n          players_with_roles={this.state.players_with_roles}\n          turn={this.state.turn}\n          gameResultPhase={this.gameResultPhase}\n          isBakerAlive={this.isBakerAlive}\n          handlePizzaOrder={this.handlePizzaOrder}\n        />\n      </div>);\n\n    let morning_exile = (\n      <div>\n        <Timer\n          setTimerSeconds={this.setTimerSeconds}\n          bgm={this.state.bgm}\n        />\n        <ListToBeExiled\n          players_with_roles={this.state.players_with_roles}\n          exile={this.exile}\n          choiceConfirmAtExilePhase={this.choiceConfirmAtExilePhase}\n        />\n      </div>);\n\n    let morning_result = (\n      <div>\n        <ResultOfMorning\n          bgm={this.state.bgm}\n          handleWinningSide={this.handleWinningSide}\n          to_be_exiled={this.state.to_be_exiled}\n          nightConfirmPhase={this.nightConfirmPhase}\n          players_with_roles={this.state.players_with_roles}\n          gameResultPhase={this.gameResultPhase}\n          handlePizzaOrder={this.handlePizzaOrder}\n        />\n      </div>);\n\n    let game_result = (\n      <div>\n        <GameResult\n          bgm={this.state.bgm}\n          handleWinningSide={this.handleWinningSide}\n          players_with_roles={this.state.players_with_roles}\n          restart={this.restart}\n        />\n      </div>)\n\n    if (!this.state.role_determined){\n      return (\n        register\n      );\n    } else if (this.state.phase === 'night_confirm') {\n      return (\n        night_confirm\n        );\n    } else if (this.state.phase === 'night'){\n      return (\n        night\n        );\n    } else if (this.state.phase === 'choice_confirm'){\n      return (\n        choice_confirm\n        );\n    } else if (this.state.phase === 'night_action_completed'){\n      return (\n        night_result\n        );\n    } else if (this.state.phase === 'morning'){\n      return (\n        morning_exile\n        );\n    } else if (this.state.phase === 'choice_confirm_at_exile'){\n      return (\n        choice_confirm_at_exile\n        );\n    } else if (this.state.phase === 'morning_action_completed'){\n      return (\n        morning_result\n        );\n    } else if (this.state.phase === 'game_result'){\n      return (\n        game_result\n        );\n    } else {\n      return(<div>else</div>);\n    }\n  }\n};\n\nexport default WerewolfGame;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport 'normalize.css/normalize.css';\nimport WerewolfGame from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<WerewolfGame />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}